name: Nuxt.js S3/CloudFront Deployment

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-2' }}
  S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  CLOUDFRONT_DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
  PNPM_VERSION: 9

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

  build:
    name: Build production
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Build Nuxt.js
        run: pnpm generate

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuxt-build
          path: .output/public/
          retention-days: 1

  deploy:
    name: Deploy to S3/CloudFront
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuxt-build
          path: .output/public/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync .output/public/ s3://${{ env.S3_BUCKET }} \
            --acl public-read \
            --delete \
            --region ${{ env.AWS_REGION }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION }} \
            --paths "/*"